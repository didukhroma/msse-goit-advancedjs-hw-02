{"version":3,"file":"commonHelpers3.js","sources":["../src/js/03-promises.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n/**\n * Settings for iziToast\n *\n *  @type {{  timeout: number; position: string;  }}\n * @description Read more about iziToast settings at https://izitoast.marcelodolza.com/\n */\nconst iziToastSettings = {\n  timeout: 3000,\n  position: 'topRight',\n};\n\n/**\n *Reference Form\n * @type {HTMLElement} formRef - HTML Element Form\n */\nconst formRef = document.querySelector('.form');\n/**iziToast base settings */\niziToast.settings(iziToastSettings);\n// Event listeners\n/**Form */\nformRef.addEventListener('submit', handlerSubmit);\n\n// FUNCTIONS\n//----------------------------------------------\n\n/**\n * After submit generate promises\n *\n * @param {Event} e submit-event\n */\nfunction handlerSubmit(e) {\n  e.preventDefault();\n  const [startDelay, step, amount] = e.currentTarget.elements;\n  const formData = {\n    firstDelay: startDelay.value,\n    step: step.value,\n    amount: amount.value,\n  };\n\n  let promiseIdx = 1;\n  let delay = Number(formData.firstDelay);\n\n  while (promiseIdx <= formData.amount) {\n    createPromise(promiseIdx, delay)\n      .then(({ position, delay }) =>\n        iziToast.show({\n          title: `✅ Fulfilled promise ${position} in ${delay}ms`,\n          backgroundColor: 'green',\n        })\n      )\n      .catch(({ position, delay }) =>\n        iziToast.show({\n          title: `❌ Rejected promise ${position} in ${delay}ms`,\n          backgroundColor: 'red',\n        })\n      );\n\n    promiseIdx += 1;\n    delay += Number(formData.step);\n  }\n  formRef.reset();\n}\n\n//----------------------------------------------\n\n/**\n * Create  and return new Promise with position and delayed time\n *\n * @param {number} position position of new promise\n * @param {number} delay delay time of new promise\n * @returns {promise}\n */\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["iziToastSettings","formRef","iziToast","handlerSubmit","startDelay","step","amount","formData","promiseIdx","delay","createPromise","position","shouldResolve","resolve","reject"],"mappings":"wIASA,MAAMA,EAAmB,CACvB,QAAS,IACT,SAAU,UACZ,EAMMC,EAAU,SAAS,cAAc,OAAO,EAE9CC,EAAS,SAASF,CAAgB,EAGlCC,EAAQ,iBAAiB,SAAUE,CAAa,EAUhD,SAASA,EAAc,EAAG,CACxB,EAAE,eAAc,EAChB,KAAM,CAACC,EAAYC,EAAMC,CAAM,EAAI,EAAE,cAAc,SAC7CC,EAAW,CACf,WAAYH,EAAW,MACvB,KAAMC,EAAK,MACX,OAAQC,EAAO,KACnB,EAEE,IAAIE,EAAa,EACbC,EAAQ,OAAOF,EAAS,UAAU,EAEtC,KAAOC,GAAcD,EAAS,QAC5BG,EAAcF,EAAYC,CAAK,EAC5B,KAAK,CAAC,CAAE,SAAAE,EAAU,MAAAF,CAAO,IACxBP,EAAS,KAAK,CACZ,MAAO,uBAAuBS,QAAeF,MAC7C,gBAAiB,OAC3B,CAAS,CACF,EACA,MAAM,CAAC,CAAE,SAAAE,EAAU,MAAAF,CAAO,IACzBP,EAAS,KAAK,CACZ,MAAO,sBAAsBS,QAAeF,MAC5C,gBAAiB,KAC3B,CAAS,CACT,EAEID,GAAc,EACdC,GAAS,OAAOF,EAAS,IAAI,EAE/BN,EAAQ,MAAK,CACf,CAWA,SAASS,EAAcC,EAAUF,EAAO,CACtC,MAAMG,EAAgB,KAAK,OAAM,EAAK,GACtC,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACXF,EACFC,EAAQ,CAAE,SAAAF,EAAU,MAAAF,CAAK,CAAE,EAE3BK,EAAO,CAAE,SAAAH,EAAU,MAAAF,CAAK,CAAE,CAE7B,EAAEA,CAAK,CACZ,CAAG,CACH"}